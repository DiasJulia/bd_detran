-- PROJETO DA DISPLINA DE GDI 
-- ALUNOS: LUCAS FERROPADILHA PAIVA
--         LÍGIA FERROPADILHA PAIVA <- minha esposa
--         MARIANA MELO
--         NATHÁLIA COELHO
--         TIAGO LIMA
--         JULIA DIAS
---------------------------------------------------------------------------------------
-- SISTEMA DE EMISSÃO DE CNH - CRIAÇÃO
---------------------------------------------------------------------------------------

-- TABELA INSTRUTOR
CREATE TABLE INSTRUTOR (
CPF VARCHAR(11) PRIMARY KEY, 
nome VARCHAR(50), 
salario NUMBER(5)
);

-- TABELA DETRAN
CREATE TABLE DETRAN (
COD INT PRIMARY KEY,
endereço_logradouro VARCHAR(50), 
endereço_CEP VARCHAR(8)
);

-- TABELA AUTO-ESCOLA
CREATE TABLE AUTOESCOLA (
CNPJ VARCHAR(14) PRIMARY KEY,
COD_detran INT NOT NULL,
CPF_coordenador VARCHAR(11) UNIQUE NOT NULL,
nome VARCHAR(50),
CONSTRAINT FK_AUTOESCOLA_DETRAN FOREIGN KEY (COD_detran) REFERENCES DETRAN (COD),
CONSTRAINT FK_AUTOESCOLA_INSTRUTOR FOREIGN KEY (CPF_COORDENADOR) REFERENCES INSTRUTOR (CPF)
);

--TABELA CONTATOS
CREATE TABLE CONTATO (
CNPJ VARCHAR (14),
contato VARCHAR(8),
CONSTRAINT PK_CONTATOS_AUTOESCOLA PRIMARY KEY (CNPJ, contato),
CONSTRAINT FK_CONTATOS_AUTOESCOLA FOREIGN KEY (CNPJ) REFERENCES AUTOESCOLA (CNPJ)
);

-- TABELA ALUNO 
CREATE TABLE ALUNO (
CPF VARCHAR (11) PRIMARY KEY, 
nome VARCHAR (50)
);

-- TABELA CARRO 
CREATE TABLE CARRO (
placa VARCHAR (11) PRIMARY KEY
);

-- TABELA DA AULA
CREATE TABLE DA_AULA (
CPF_aluno VARCHAR (11), 
CPF_instrutor VARCHAR (11),
placa VARCHAR (7),
data_hora TIMESTAMP,
CONSTRAINT PK_DA_AULA PRIMARY KEY (CPF_aluno, CPF_instrutor, Data_hora),
CONSTRAINT FK_DA_AULA_ALUNO FOREIGN KEY (CPF_aluno) REFERENCES ALUNO (CPF),
CONSTRAINT FK_DA_AULA_INSTRUTOR FOREIGN KEY (CPF_instrutor) REFERENCES INSTRUTOR (CPF),
CONSTRAINT FK_DA_AULA_CARRO FOREIGN KEY (Placa) REFERENCES CARRO (Placa)
);

-- TABELA TRABALHA
CREATE TABLE TRABALHA (
CPF_instrutor VARCHAR (11),
CNPJ VARCHAR (14),
CONSTRAINT PK_TRABALHA PRIMARY KEY (CPF_instrutor, CNPJ),
CONSTRAINT FK_TRABALHA_CPF_instrutor FOREIGN KEY (CPF_instrutor) REFERENCES INSTRUTOR (CPF),
CONSTRAINT FK_TRABALHA_AUTOESCOLA FOREIGN KEY (CNPJ) REFERENCES AUTOESCOLA (CNPJ)
);

-- TABELA MATRÍCULA
CREATE TABLE MATRICULA (
CNPJ VARCHAR (14) NOT NULL,
CPF VARCHAR (11) PRIMARY KEY,
COD_detran INT,
CONSTRAINT FK_MATRICULA_AUTOESCOLA FOREIGN KEY (CNPJ) REFERENCES AUTOESCOLA (CNPJ),
CONSTRAINT FK_MATRICULA_DETRAN FOREIGN KEY (COD_detran) REFERENCES DETRAN(COD),
CONSTRAINT FK_MATRICULA_ALUNO FOREIGN KEY (CPF) REFERENCES ALUNO(CPF)
);

-- TABELA FUNCIONÁRIO
CREATE TABLE FUNCIONARIO (
CPF VARCHAR (11) PRIMARY KEY,
COD_detran INT,
chefe VARCHAR (11), 
CONSTRAINT FK_FUNCIONARIO_DETRAN FOREIGN KEY (COD_detran) REFERENCES DETRAN (COD),
CONSTRAINT FK_FUNCIONARIO_FUNCIONARIO FOREIGN KEY (chefe) REFERENCES FUNCIONARIO (CPF)
);

-- TABELA PSICOTECNICO 
CREATE TABLE PSICOTECNICO (
COD INT PRIMARY KEY,
Resultado NUMBER(1),
Observacoes VARCHAR(250),
CPF_aluno VARCHAR (11) NOT NULL,
CPF_funcionario VARCHAR (11), 
CONSTRAINT FK_PSICOTECNICO_ALUNO FOREIGN KEY (CPF_aluno) REFERENCES ALUNO(CPF),
CONSTRAINT FK_PSICOTECNICO_FUNCIONARIO FOREIGN KEY (CPF_funcionario) REFERENCES FUNCIONARIO(CPF)
);

-- TABELA TEORICO 
CREATE TABLE TEORICO (
COD INT PRIMARY KEY,
Resultado NUMBER(1),
Pontuacao INT,
CPF_aluno VARCHAR (11) NOT NULL,
CPF_funcionario VARCHAR (11), 
CONSTRAINT FK_TEORICO_ALUNO FOREIGN KEY (CPF_aluno) REFERENCES ALUNO(CPF),
CONSTRAINT FK_TEORICO_FUNCIONARIO FOREIGN KEY (CPF_funcionario) REFERENCES FUNCIONARIO(CPF)
);

-- TABELA PRATICO 
CREATE TABLE PRATICO (
COD INT PRIMARY KEY,
Resultado NUMBER(1),
Local_prova VARCHAR(50),
CPF_aluno VARCHAR (11) NOT NULL,
CPF_funcionario VARCHAR (11), 
CONSTRAINT FK_PRATICO_ALUNO FOREIGN KEY (CPF_aluno) REFERENCES ALUNO(CPF),
CONSTRAINT FK_PRATICO_FUNCIONARIO FOREIGN KEY (CPF_funcionario) REFERENCES FUNCIONARIO(CPF)
);

-- TABELA QUESTAO
CREATE TABLE QUESTAO (
ID INT,
COD INT,
Enunciado VARCHAR(250),
Alt1 VARCHAR(50),
Alt2 VARCHAR(50),
Alt3 VARCHAR(50),
Alt4 VARCHAR(50),
Alt_correta INT,
CONSTRAINT PK_QUESTAO PRIMARY KEY (ID, COD),
CONSTRAINT FK_QUESTAO_TEORICO FOREIGN KEY (COD) REFERENCES TEORICO(COD)
);